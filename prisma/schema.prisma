// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  CUSTOMER
}

model User {
  id                  Int                  @id @default(autoincrement())
  email               String               @unique
  name                String
  password            String
  phone               String?
  image               String?              @db.Text
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  role                Role                 @default(CUSTOMER)

  reviews             Review[]
  orders              Order[]
  passwordResetTokens PasswordResetToken[]
}

model Product {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  imageUrl         String?    @db.Text
  description      String?    @db.Text // Deskripsi produk
  price            Float      @default(0) // Harga normal
  stock            Int        @default(0) // Jumlah stok
  discountPrice    Float?     // Harga diskon (opsional)
  flashSaleEndDate DateTime?  // Waktu akhir flash sale (opsional)

  reviews          Review[]
  orderItems       OrderItem[]
}

model Review {
  id              Int      @id @default(autoincrement())
  reviewerName    String?
  comment         String
  ratingWaktu     Int
  ratingHarga     Int
  ratingBahan     Int
  ratingDesain    Int
  ratingPackaging Int
  
  userId          Int?
  user            User?    @relation(fields: [userId], references: [id])
  
  productId       Int
  product         Product  @relation(fields: [productId], references: [id])
  
  createdAt       DateTime @default(now())
}

model Order {
  id           Int         @id @default(autoincrement())
  customerName String
  orderDate    DateTime    @default(now())
  totalAmount  Float
  status       String      @default("Pending")
  
  userId       Int?
  user         User?       @relation(fields: [userId], references: [id])

  items        OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}